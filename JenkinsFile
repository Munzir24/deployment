pipeline {
    agent {
        label "slave1"
    }

    parameters {
        string(name: 'VERSION', defaultValue: '0.12.17', description: 'Version of the artifact to be deployed')
    }

    environment {
        ANSIBLE_INVENTORY = 'hosts' // Assuming the inventory file is at the root of the repo
        CONFIGURE_PLAYBOOK = 'mytomcat.yaml' // Update this based on your repo structure
        DEPLOY_PLAYBOOK = 'deploy-cicd.yaml' // Update this based on your repo structure
        GIT_REPO = 'https://github.com/Munzir24/deployment.git'
        SSH_KEY_PATH = '/home/ec2-user/.ssh/mykey.pem' // Path to your private key on the Jenkins agent
        ANSIBLE_EXTRA_ARGS = "--private-key ${SSH_KEY_PATH}"
        NEXUS_CREDENTIALS = credentials('nexus-token') // ID of the Jenkins credentials containing Nexus username and password
    }

    stages {
        stage('Install Python 3') {
            steps {
                sh '''
                if ! command -v python3 &> /dev/null; then
                    sudo yum install epel-release -y || sudo apt update
                    sudo yum install python3 -y || sudo apt install python3 -y
                fi
                '''
            }
        }

        stage('Clone Ansible Code from GitHub') {
            steps {
                git url: "${GIT_REPO}"
            }
        }

        stage('Configure Tomcat and Java on Dev Environment') {
            steps {
                script {
                    ansiblePlaybook(
                        playbook: "${CONFIGURE_PLAYBOOK}",
                        inventory: "${ANSIBLE_INVENTORY}",
                        extras: "-e env=dev ${ANSIBLE_EXTRA_ARGS}"
                    )
                }
            }
        }

        stage('Configure Tomcat and Java on Prod Environment') {
            steps {
                script {
                    ansiblePlaybook(
                        playbook: "${CONFIGURE_PLAYBOOK}",
                        inventory: "${ANSIBLE_INVENTORY}",
                        extras: "-e env=prod ${ANSIBLE_EXTRA_ARGS}"
                    )
                }
            }
        }

        stage('Deploy Application to Dev Environment') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'nexus-token', passwordVariable: 'NEXUS_PASSWORD', usernameVariable: 'NEXUS_USER')]) {
                    script {
                        ansiblePlaybook(
                            playbook: "${DEPLOY_PLAYBOOK}",
                            inventory: "${ANSIBLE_INVENTORY}",
                            extras: "-e \"env=dev nexus_user=${NEXUS_USER} nexus_password=${NEXUS_PASSWORD} version=${params.VERSION}\" ${ANSIBLE_EXTRA_ARGS}"
                        )
                    }
                }
            }
        }

        stage('Deploy Application to Prod Environment') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'nexus-token', passwordVariable: 'NEXUS_PASSWORD', usernameVariable: 'NEXUS_USER')]) {
                    script {
                        ansiblePlaybook(
                            playbook: "${DEPLOY_PLAYBOOK}",
                            inventory: "${ANSIBLE_INVENTORY}",
                            extras: "-e \"env=prod nexus_user=${NEXUS_USER} nexus_password=${NEXUS_PASSWORD} version=${params.VERSION}\" ${ANSIBLE_EXTRA_ARGS}"
                        )
                    }
                }
            }
        }
    }
}
